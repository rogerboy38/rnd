{
 "creation": "2025-08-23 19:27:57.184088",
 "docstatus": 0,
 "doctype": "Client Script",
 "dt": "COA AMB2",
 "enabled": 0,
 "idx": 0,
 "modified": "2025-08-23 19:49:26.540618",
 "modified_by": "Administrator",
 "module": "RND",
 "name": "load_tds_parameters_best_practice",
 "owner": "Administrator",
 "script": "// BEST PRACTICE Client Script for TDS Loading\r\nfrappe.ui.form.on('COA AMB', {\r\n    refresh: function(frm) {\r\n        frm.add_custom_button(__('\ud83d\udce5 Load TDS Parameters (Best Practice)'), function() {\r\n            load_tds_parameters_best_practice(frm);\r\n        }).addClass('btn-primary');\r\n    }\r\n});\r\n\r\nasync function load_tds_parameters_best_practice(frm) {\r\n    if (!frm.doc.linked_tds) {\r\n        frappe.msgprint(__('Please select a TDS first'));\r\n        return;\r\n    }\r\n\r\n    const loading = frappe.show_progress(__('Loading'), __('Fetching parameters...'), 0);\r\n\r\n    try {\r\n        // Option 1: Use client-side processing (Recommended)\r\n        await load_with_client_side(frm);\r\n        \r\n        // Option 2: Use server script if needed\r\n        // await load_with_server_script(frm);\r\n        \r\n    } catch (error) {\r\n        handle_load_error(error);\r\n    } finally {\r\n        loading.hide();\r\n    }\r\n}\r\n\r\n// OPTION 1: Client-side processing (PREFERRED)\r\nasync function load_with_client_side(frm) {\r\n    const result = await frappe.call({\r\n        method: 'frappe.client.get',\r\n        args: {\r\n            doctype: 'TDS Product Specification',\r\n            name: frm.doc.linked_tds,\r\n            fields: [\r\n                'item_quality_inspection_parameter.parameter',\r\n                'item_quality_inspection_parameter.specification',\r\n                'item_quality_inspection_parameter.min_value',\r\n                'item_quality_inspection_parameter.max_value'\r\n            ]\r\n        }\r\n    });\r\n\r\n    if (result.message) {\r\n        process_parameters_client_side(result.message, frm);\r\n    }\r\n}\r\n\r\n// OPTION 2: Server script approach\r\nasync function load_with_server_script(frm) {\r\n    const result = await frappe.call({\r\n        method: 'load_tds_parameters',\r\n        args: {\r\n            coa_name: frm.doc.name || 'new_document',\r\n            tds_name: frm.doc.linked_tds\r\n        }\r\n    });\r\n\r\n    if (result.message && result.message.success) {\r\n        process_server_response(result.message, frm);\r\n    } else {\r\n        throw new Error(result.message?.message || 'Server script failed');\r\n    }\r\n}\r\n\r\nfunction process_parameters_client_side(tds_doc, frm) {\r\n    if (!tds_doc.item_quality_inspection_parameter) {\r\n        throw new Error('No parameters found in TDS');\r\n    }\r\n\r\n    frm.clear_table('coa_quality_test_parameter');\r\n    \r\n    tds_doc.item_quality_inspection_parameter.forEach(param => {\r\n        const row = frm.add_child('coa_quality_test_parameter');\r\n        Object.assign(row, {\r\n            parameter: param.parameter || 'Parameter',\r\n            specification: param.specification || '',\r\n            min_value: param.min_value,\r\n            max_value: param.max_value,\r\n            is_numeric: (param.min_value || param.max_value) ? 1 : 0,\r\n            result_status: 'Pending'\r\n        });\r\n    });\r\n\r\n    frm.refresh_field('coa_quality_test_parameter');\r\n    frappe.show_alert(__('Successfully loaded parameters'), 'green');\r\n}\r\n\r\nfunction process_server_response(response, frm) {\r\n    if (response.parameters) {\r\n        frm.clear_table('coa_quality_test_parameter');\r\n        \r\n        response.parameters.forEach(param => {\r\n            const row = frm.add_child('coa_quality_test_parameter');\r\n            Object.assign(row, param);\r\n        });\r\n\r\n        frm.refresh_field('coa_quality_test_parameter');\r\n    }\r\n    \r\n    frappe.show_alert(response.message, 'green');\r\n}\r\n\r\nfunction handle_load_error(error) {\r\n    console.error('Load error:', error);\r\n    frappe.msgprint({\r\n        title: __('Load Failed'),\r\n        message: __('Error loading parameters: ') + error.message,\r\n        indicator: 'red'\r\n    });\r\n}",
 "view": "Form"
}
